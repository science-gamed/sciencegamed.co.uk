module.exports = function ( grunt ) {
	
	var fs, helpers, save;

	fs = require( 'fs' );

	helpers = {
		mustache: require( 'mustache' ),
		getPath: require( 'utils/getPath' ),
		sortByDate: require( 'utils/sortByDate' ),
		parseMarkdown: require( 'node-markdown' ).Markdown
	};

	save = function ( pages ) {
		var i, root, page;

		if ( Object.prototype.toString.call( pages ) !== '[object Array]' ) {
			pages = [ pages ];
		}

		i = pages.length;
		root = 'project/src/';

		while ( i-- ) {
			page = pages[i];
			console.log( 'Writing ' + root + page.path );
			fs.writeFileSync( root + page.path, page.data );
		}
	};

	grunt.registerTask( 'generate', 'Generate static pages', function () {
		var fs, config, subtask, generate, generators, generator, data, id, pageCollections;

		grunt.config.requires( 'generate' );
		config = grunt.config( 'generate' );

		data = JSON.parse( grunt.file.read( config.data ) );
		generators = config.generators;

		pageCollections = [];

		i = generators.length;
		while ( i-- ) {
			generator = require( 'generators/' + generators[i] );
			save( generator( data, helpers ) );
		}
	});

};